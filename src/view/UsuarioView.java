/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.UsuarioController;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.domain.Usuario;

/**
 *
 * @author Administrador
 */
public class UsuarioView extends javax.swing.JInternalFrame {
    
    private UsuarioController uc;

    /**
     * Creates new form UsuarioView
     */
    public UsuarioView() {
        this.uc = new UsuarioController();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnControles = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtLimpar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtListar = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jpnCadastro = new javax.swing.JPanel();
        lbCodigo = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        lbLogin = new javax.swing.JLabel();
        jtLogin = new javax.swing.JTextField();
        lbTipo = new javax.swing.JLabel();
        jcbTipo = new javax.swing.JComboBox();
        jckStatus = new javax.swing.JCheckBox();
        lbStatus = new javax.swing.JLabel();
        jpnSenha = new javax.swing.JPanel();
        jpfSenha = new javax.swing.JPasswordField();
        lbSenha = new javax.swing.JLabel();
        lbConfirmacao = new javax.swing.JLabel();
        jpfConfirma = new javax.swing.JPasswordField();
        jsplista = new javax.swing.JScrollPane();
        jtLista = new javax.swing.JTable();

        setClosable(true);

        jpnControles.setBorder(javax.swing.BorderFactory.createTitledBorder("Controles"));

        jbtNovo.setText("Novo usuário");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtLimpar.setText("Cancelar");
        jbtLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLimparActionPerformed(evt);
            }
        });

        jbtSalvar.setText("Salvar");
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtListar.setText("Listar");
        jbtListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtListarActionPerformed(evt);
            }
        });

        jbtExcluir.setText("Excluir");
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnControlesLayout = new javax.swing.GroupLayout(jpnControles);
        jpnControles.setLayout(jpnControlesLayout);
        jpnControlesLayout.setHorizontalGroup(
            jpnControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnControlesLayout.createSequentialGroup()
                .addComponent(jbtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtListar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 52, Short.MAX_VALUE))
        );

        jpnControlesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtExcluir, jbtListar, jbtSalvar});

        jpnControlesLayout.setVerticalGroup(
            jpnControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtNovo)
                .addComponent(jbtLimpar)
                .addComponent(jbtSalvar)
                .addComponent(jbtListar)
                .addComponent(jbtExcluir))
        );

        jpnCadastro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        lbCodigo.setText("Código:");

        jtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCodigoFocusLost(evt);
            }
        });

        lbNome.setText("Nome:");

        jtNome.setEnabled(false);
        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });

        lbLogin.setText("Login:");

        jtLogin.setEnabled(false);

        lbTipo.setText("Tipo:");

        jcbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<SELECIONE>", "ADMINISTRADOR", "USUARIO" }));
        jcbTipo.setEnabled(false);

        jckStatus.setEnabled(false);

        lbStatus.setText("Ativo/Inativo");

        javax.swing.GroupLayout jpnCadastroLayout = new javax.swing.GroupLayout(jpnCadastro);
        jpnCadastro.setLayout(jpnCadastroLayout);
        jpnCadastroLayout.setHorizontalGroup(
            jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCadastroLayout.createSequentialGroup()
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnCadastroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCodigo)
                            .addComponent(lbNome)
                            .addComponent(lbLogin)
                            .addComponent(lbTipo)))
                    .addGroup(jpnCadastroLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lbStatus)))
                .addGap(12, 12, 12)
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtNome)
                    .addGroup(jpnCadastroLayout.createSequentialGroup()
                        .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jckStatus)
                            .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtLogin)
                                .addComponent(jcbTipo, 0, 190, Short.MAX_VALUE)))
                        .addGap(0, 77, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpnCadastroLayout.setVerticalGroup(
            jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCadastroLayout.createSequentialGroup()
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigo)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLogin)
                    .addComponent(jtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTipo)
                    .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jpnCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jckStatus)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnCadastroLayout.createSequentialGroup()
                        .addComponent(lbStatus)
                        .addGap(4, 4, 4))))
        );

        jpnSenha.setBorder(javax.swing.BorderFactory.createTitledBorder("Senha"));

        jpfSenha.setEnabled(false);

        lbSenha.setText("Senha:");

        lbConfirmacao.setText("Confirmação");

        jpfConfirma.setEnabled(false);

        javax.swing.GroupLayout jpnSenhaLayout = new javax.swing.GroupLayout(jpnSenha);
        jpnSenha.setLayout(jpnSenhaLayout);
        jpnSenhaLayout.setHorizontalGroup(
            jpnSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnSenhaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpfSenha)
                    .addComponent(jpfConfirma)
                    .addGroup(jpnSenhaLayout.createSequentialGroup()
                        .addGroup(jpnSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSenha)
                            .addComponent(lbConfirmacao))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpnSenhaLayout.setVerticalGroup(
            jpnSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnSenhaLayout.createSequentialGroup()
                .addComponent(lbSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbConfirmacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpfConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jsplista.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de usuários"));
        jsplista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jsplistaMouseClicked(evt);
            }
        });

        jtLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Login"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtLista.setNextFocusableComponent(jbtNovo);
        jtLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jsplista.setViewportView(jtLista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jsplista)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpnCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsplista, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost

    }//GEN-LAST:event_jtNomeFocusLost

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        this.uc.novo();
        limparCampos();
        habilitaCampos();
        jtNome.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLimparActionPerformed
        this.limparCampos();
        this.uc.setUsuarioManipulado(null);
        this.desabiltaCampos();
    }//GEN-LAST:event_jbtLimparActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
        if (this.uc.getUsuarioManipulado() == null) {
            JOptionPane.showMessageDialog(this, "não há nada para salvar!");
        } else {
            if (this.validar()) {
                this.enviaForm();
                try {
                    this.uc.salvar();
                    JOptionPane.showMessageDialog(this, "Salvo Com Sucesso!", "salvo", JOptionPane.INFORMATION_MESSAGE);
                    this.limparCampos();
                    this.desabiltaCampos();
                    this.uc.novo();
                    this.uc.pesquisar();
                    this.atualizaTabela();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtListarActionPerformed
        this.uc.novo();
        this.uc.pesquisar();
        this.atualizaTabela();
    }//GEN-LAST:event_jbtListarActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        if (this.uc.getUsuarioManipulado() == null) {
            JOptionPane.showMessageDialog(this, "não há nada para remover!");
        } else {
            if (JOptionPane.showConfirmDialog(this, "deseja realmente remover?", "confirmação", JOptionPane.YES_NO_OPTION)
                    == JOptionPane.YES_OPTION) {
                this.uc.excluir();
                this.limparCampos();
                this.desabiltaCampos();
                this.uc.novo();
                this.uc.pesquisar();
                this.atualizaTabela();
                this.uc.setUsuarioManipulado(null);
            }
        }
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jsplistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jsplistaMouseClicked

    }//GEN-LAST:event_jsplistaMouseClicked

    private void jtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCodigoFocusLost
        try {
            if (!jtCodigo.getText().equals("")) {
                Integer cod = Integer.parseInt(jtCodigo.getText());
                this.uc.novo();
                this.uc.pesquisar();
                for (int i = 0; i < this.uc.getListaDeUsuario().size(); i++) {
                    if (this.uc.getListaDeUsuario().get(i).getCodigo().equals(cod)) {
                        this.uc.setUsuarioManipulado(this.uc.getListaDeUsuario().get(i));
                        this.recebeForm();
                        this.habilitaCampos();
                        this.jtNome.requestFocus();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido!", "validação", JOptionPane.WARNING_MESSAGE);
            this.jtCodigo.requestFocus();
        }
    }//GEN-LAST:event_jtCodigoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtLimpar;
    private javax.swing.JButton jbtListar;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbTipo;
    private javax.swing.JCheckBox jckStatus;
    private javax.swing.JPasswordField jpfConfirma;
    private javax.swing.JPasswordField jpfSenha;
    private javax.swing.JPanel jpnCadastro;
    private javax.swing.JPanel jpnControles;
    private javax.swing.JPanel jpnSenha;
    private javax.swing.JScrollPane jsplista;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTable jtLista;
    private javax.swing.JTextField jtLogin;
    private javax.swing.JTextField jtNome;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbConfirmacao;
    private javax.swing.JLabel lbLogin;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbSenha;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbTipo;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        jtCodigo.setText(null);
        jtNome.setText(null);
        jtLogin.setText(null);
        jckStatus.setSelected(false);
        jcbTipo.setSelectedIndex(0);
        jpfSenha.setText(null);
        jpfConfirma.setText(null);
    }
    
    private boolean validar() {
        
        if (jtNome.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "preencha o campo nome!", "campo obrigatório", JOptionPane.WARNING_MESSAGE);
            jtNome.requestFocus();
            return false;
        }
        if (jtLogin.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "preencha o campo login!", "campo obrigatório", JOptionPane.WARNING_MESSAGE);
            jtLogin.requestFocus();
            return false;
        }
        if (jcbTipo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "selecione um tipo!", "campo obrigatório", JOptionPane.WARNING_MESSAGE);
            jcbTipo.requestFocus();
            return false;
        }
        if (!new String(jpfSenha.getPassword()).equals("")) {
            String senha = new String(jpfSenha.getPassword());
            if (!senha.equals(new String(jpfConfirma.getPassword()))) {
                JOptionPane.showMessageDialog(this, "Senha e confirmação não conferem!", "Senha",
                        JOptionPane.WARNING_MESSAGE);
                jcbTipo.requestFocus();
                return false;
            }
        }
        return true;
    }
    
    private void enviaForm() {
        if (this.uc.getUsuarioManipulado() != null) {
            if (!this.jtCodigo.getText().equals("")) {
                this.uc.getUsuarioManipulado()
                        .setCodigo(Integer.parseInt(this.jtCodigo.getText()));
            } else {
                this.uc.getUsuarioManipulado().setCodigo(null);
            }
            this.uc.getUsuarioManipulado()
                    .setNome(this.jtNome.getText());
            this.uc.getUsuarioManipulado()
                    .setLogin(this.jtLogin.getText());
            if (this.jckStatus.isSelected()) {
                this.uc.getUsuarioManipulado()
                        .setStatus(1);
            } else {
                this.uc.getUsuarioManipulado().setStatus(0);
            }
            this.uc.getUsuarioManipulado()
                    .setSenha(new String(this.jpfSenha.getPassword()));
            this.uc.getUsuarioManipulado()
                    .setTipo(this.jcbTipo.getSelectedIndex());
        }
    }
    
    private void recebeForm() {
        if (this.uc.getUsuarioManipulado() != null) {
            this.jtCodigo.setText(this.uc.getUsuarioManipulado().getCodigo().toString());
            this.jtNome.setText(this.uc.getUsuarioManipulado().getNome());
            this.jtLogin.setText(this.uc.getUsuarioManipulado().getLogin());
            if (this.uc.getUsuarioManipulado().getStatus() == 1) {
                this.jckStatus.setSelected(true);
            } else {
                this.jckStatus.setSelected(false);
            }
            this.jcbTipo.setSelectedIndex(this.uc.getUsuarioManipulado().getTipo());
            this.jpfSenha.setText(this.uc.getUsuarioManipulado().getSenha());
            this.jpfConfirma.setText(this.uc.getUsuarioManipulado().getSenha());
        }
    }
    
    private void atualizaTabela() {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Código");
        dtm.addColumn("Nome");
        dtm.addColumn("Login");
        this.jtLista.setModel(dtm);
        if (!this.uc.getListaDeUsuario().isEmpty()) {
            for (int i = 0; i < this.uc.getListaDeUsuario().size(); i++) {
                Usuario u = this.uc.getListaDeUsuario().get(i);
                dtm.addRow(new Object[]{u.getCodigo(), u.getNome(), u.getLogin()});
            }
            this.jtLista.setRowSelectionInterval(0, 0);
            this.jtLista.requestFocus();
            this.uc.setUsuarioManipulado(this.uc.getListaDeUsuario().get(0));
        } else {
            JOptionPane.showMessageDialog(this, "nenhuma informação a listar!!");
        }
    }
    
    public void habilitaCampos() {
        jtNome.setEnabled(true);
        jtLogin.setEnabled(true);
        jcbTipo.setEnabled(true);
        jckStatus.setEnabled(true);
        jpfConfirma.setEnabled(true);
        jpfSenha.setEnabled(true);
    }
    
    public void desabiltaCampos() {
        jtNome.setEnabled(false);
        jtLogin.setEnabled(false);
        jcbTipo.setEnabled(false);
        jckStatus.setEnabled(false);
        jpfConfirma.setEnabled(false);
        jpfSenha.setEnabled(false);
    }
}
